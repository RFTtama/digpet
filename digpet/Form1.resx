<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="CpuUsageTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        WbJkqbXp/wFZDO3kOYZwuwAAAABJRU5ErkJggg==
</value>
  </data>
</root>